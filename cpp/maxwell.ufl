# See https://trilinos.github.io/pdfs/mueluguide.pdf p. 24 for problem
# or Hiptmair2007

coord_element = VectorElement("Lagrange", tetrahedron, 1)
mesh = Mesh(coord_element)

Hcurl_element = FiniteElement("N1curl", tetrahedron, 1)
Q = FunctionSpace(mesh, Hcurl_element)

alpha = 1.0
beta = 1.0

x = SpatialCoordinate(mesh)
# Real
factor = 1.0
# Complex
# factor = 1.0 + 1.0j
E_exact = factor * as_vector((sin(pi * x[1]) * sin(pi * x[2]),
                              sin(pi * x[0]) * sin(pi * x[2]),
                              sin(pi * x[0]) * sin(pi * x[1])))
f = curl(alpha * curl(E_exact)) + beta * E_exact

E = TrialFunction(Q)
v = TestFunction(Q)

Kc = alpha * inner(curl(E), curl(v)) * dx + beta * inner(E, v) * dx
Mc = inner(E, v) * dx
L = inner(f, v) * dx

Hgrad_element = FiniteElement("Lagrange", tetrahedron, 1)
V = FunctionSpace(mesh, Hgrad_element)
u = TrialFunction(V)
v = TestFunction(V)
Mg = inner(u, v) * dx

forms = [Kc, Mc, Mg, L]